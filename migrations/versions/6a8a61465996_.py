"""empty message

Revision ID: 6a8a61465996
Revises: 
Create Date: 2021-01-01 15:44:05.965246

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6a8a61465996'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exchange',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('acronmy', sa.String(), nullable=True),
    sa.Column('mic', sa.String(), nullable=True),
    sa.Column('timezone_offset', sa.DateTime(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('vendor_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('symbol',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('provided_by', sa.String(), nullable=True),
    sa.Column('exchange_id', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('instrument', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('figi', sa.String(), nullable=True),
    sa.Column('composite_figi', sa.String(), nullable=True),
    sa.Column('share_class_figi', sa.String(), nullable=True),
    sa.Column('share_class', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['exchange_id'], ['exchange.id'], ),
    sa.ForeignKeyConstraint(['provided_by'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('cik', sa.String(), nullable=False),
    sa.Column('sector', sa.String(), nullable=False),
    sa.Column('industry_category', sa.String(), nullable=False),
    sa.Column('industry_group', sa.String(), nullable=False),
    sa.Column('company_url', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sic', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['symbol_id'], ['symbol.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_adjustment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.Integer(), nullable=True),
    sa.Column('company', sa.Integer(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('divident_amount', sa.Float(), nullable=False),
    sa.Column('split_coef', sa.Float(), nullable=False),
    sa.Column('shares_outstanding', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['company'], ['company.id'], ),
    sa.ForeignKeyConstraint(['vendor'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_prices_daily',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('adj_open', sa.Float(), nullable=False),
    sa.Column('adj_high', sa.Float(), nullable=False),
    sa.Column('adj_low', sa.Float(), nullable=False),
    sa.Column('adj_close', sa.Float(), nullable=False),
    sa.Column('adj_volume', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_prices_intraday',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('adj_open', sa.Float(), nullable=False),
    sa.Column('adj_high', sa.Float(), nullable=False),
    sa.Column('adj_low', sa.Float(), nullable=False),
    sa.Column('adj_close', sa.Float(), nullable=False),
    sa.Column('adj_volume', sa.Float(), nullable=False),
    sa.Column('frequency', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('stock_prices')
    op.drop_table('strategy')
    op.drop_table('stocks')
    op.drop_table('stock_strategy')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock_strategy',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('strategy_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name='stock_strategy_stock_id_fkey'),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategy.strategy_id'], name='stock_strategy_strategy_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stock_strategy_pkey')
    )
    op.create_table('stocks',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('stocks_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exchange', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('shortables', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='stocks_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('strategy',
    sa.Column('strategy_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('strategy_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('strategy_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('strategy_id', name='strategy_pkey')
    )
    op.create_table('stock_prices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('open', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('high', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('low', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('close', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('volume', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('sma_20', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sma_50', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('rsi_14', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name='stock_prices_stock_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stock_prices_pkey')
    )
    op.drop_table('stock_prices_intraday')
    op.drop_table('stock_prices_daily')
    op.drop_table('stock_adjustment')
    op.drop_table('company')
    op.drop_table('symbol')
    op.drop_table('vendors')
    op.drop_table('exchange')
    # ### end Alembic commands ###
